# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\design(1).ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QApplication
import utils

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        QtWidgets.QMainWindow.__init__(self)
        self.setupUi(self)
        self.retranslateUi(self)
        self.setAttribute(QtCore.Qt.WA_TranslucentBackground) # 设置窗口背景透明
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        self.setWindowOpacity(0.95)
        self.add_shadow()
        self.pushButton_close.clicked.connect(self.closeWidget)
        self.pushButton_hidden.clicked.connect(self.hideWidget)
        self.pushButton_choose.clicked.connect(self.chooseFile)
        self.pushButton_draw.clicked.connect(self.drawExcel)
   
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(780, 480)
        MainWindow.setStyleSheet("background-color:white")

        self.base_widget = QtWidgets.QWidget() # 创建透明窗口
        self.base_widget.setStyleSheet('''QWidget{  border-radius:7px;background-color:rgb(255, 255, 255);}''')
        self.base_widget.setObjectName('base_widget')
        self.base_layout = QtWidgets.QGridLayout()
        self.base_widget.setLayout(self.base_layout)
        self.base_widget.setAttribute(QtCore.Qt.WA_TranslucentBackground)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet('''QWidget{  border-radius:7px;background-color:rgb(255, 255, 255);}''')
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setContentsMargins(-1, 0, 0, -1)
        self.horizontalLayout_6.setSpacing(10)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem = QtWidgets.QSpacerItem(100, 1, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.pushButton_hidden = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_hidden.sizePolicy().hasHeightForWidth())
        self.pushButton_hidden.setSizePolicy(sizePolicy)
        self.pushButton_hidden.setMinimumSize(QtCore.QSize(25, 25))
        self.pushButton_hidden.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_hidden.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_hidden.setStyleSheet('''
        QPushButton{
        border-radius: 12px;
        background-color:rgb(255, 223, 128);}
        QToolTip{
        border:1px solid rgb(118, 118, 118);
        background-color: #ffffff; color:#484848;
        font-size:12px;}''')
        self.pushButton_hidden.setText("")
        self.pushButton_hidden.setObjectName("pushButton_hidden")
        self.pushButton_hidden.setToolTip('最小化')
        self.horizontalLayout_6.addWidget(self.pushButton_hidden)
        self.pushButton_close = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_close.setMinimumSize(QtCore.QSize(25, 25))
        self.pushButton_close.setMaximumSize(QtCore.QSize(25, 25))
        self.pushButton_close.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_close.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton_close.setStyleSheet('''
        QPushButton{
        border-radius: 12px;
        background-color:rgb(255, 97, 90);}
        QToolTip{
        border:1px solid rgb(118, 118, 118);
        background-color: #ffffff; color:#484848;
        font-size:12px;}''')
        self.pushButton_close.setText("")
        self.pushButton_close.setObjectName("pushButton_close")
        self.pushButton_close.setToolTip('关闭')
        self.horizontalLayout_6.addWidget(self.pushButton_close)
        self.horizontalLayout.addLayout(self.horizontalLayout_6)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.horizontalLayout_5.addWidget(self.label)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(40, 20, 20, -1)
        self.horizontalLayout_2.setSpacing(20)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setStyleSheet("border:1px solid rgb(30, 30, 30)")
        self.horizontalLayout_2.addWidget(self.lineEdit)
        self.pushButton_choose = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_choose.sizePolicy().hasHeightForWidth())
        self.pushButton_choose.setSizePolicy(sizePolicy)
        self.pushButton_choose.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("等线")
        self.pushButton_choose.setFont(font)
        self.pushButton_choose.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_choose.setStyleSheet("border: none;\n"
"background-color:rgb(108, 171, 250);\n"
"color:white;\n"
"padding:10px 20px 10px 20px;\n"
"font-size: 20px;\n"
"\n"
"")
        self.pushButton_choose.setObjectName("pushButton_choose")
        self.horizontalLayout_2.addWidget(self.pushButton_choose)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(-1, 40, -1, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_draw = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_draw.sizePolicy().hasHeightForWidth())
        self.pushButton_draw.setSizePolicy(sizePolicy)
        self.pushButton_draw.setMaximumSize(QtCore.QSize(150, 60))
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_draw.setFont(font)
        self.pushButton_draw.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_draw.setStyleSheet("border: none;\n"
"background-color:rgb(108, 171, 250);\n"
"color:white;\n"
"padding:10px 20px 10px 20px;\n"
"font-size: 20px;\n"
"")
        self.pushButton_draw.setObjectName("pushButton_draw")
        self.horizontalLayout_3.addWidget(self.pushButton_draw)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setContentsMargins(-1, -1, 10, 5)
        self.horizontalLayout_4.setSpacing(7)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("等线")
        self.label_2.setFont(font)
        self.label_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_4.addWidget(self.label_2)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.base_layout.addWidget(self.centralwidget) 
        MainWindow.setCentralWidget(self.base_widget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "欢迎使用excelPainter"))
        self.pushButton_choose.setText(_translate("MainWindow", "选择图片"))
        self.pushButton_draw.setText(_translate("MainWindow", "绘制"))
        self.label_2.setText(_translate("MainWindow", "design by Coderxiu"))
    def mousePressEvent(self, event):
        if event.button()==QtCore.Qt.LeftButton:
            self.m_flag=True
            self.m_Position=event.globalPos()-self.pos() #获取鼠标相对窗口的位置
            event.accept()
            self.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor)) #更改鼠标图标
            
    def mouseMoveEvent(self, QMouseEvent):
        if QtCore.Qt.LeftButton and self.m_flag: 
            self.move(QMouseEvent.globalPos()-self.m_Position)#更改窗口位置
            QMouseEvent.accept()
        
    def mouseReleaseEvent(self, QMouseEvent):
        self.m_flag=False
        self.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
    def add_shadow(self):
        # 添加阴影
        self.effect_shadow = QtWidgets.QGraphicsDropShadowEffect(self)
        self.effect_shadow.setOffset(0,0) # 偏移
        self.effect_shadow.setBlurRadius(20) # 阴影半径
        self.effect_shadow.setColor(QtCore.Qt.gray) # 阴影颜色
        self.centralwidget.setGraphicsEffect(self.effect_shadow) # 将设置套用到widget窗口中

    # @pyqtSlot()
    def closeWidget(self):
        """
        关闭窗口
        """
        self.close()
    
    # @pyqtSlot()
    def hideWidget(self):
        """
        最小化窗口
        """
        self.showMinimized()

    # @pyqtSlot()
    def chooseFile(self):
        """
        选择图片
        """
        m = QtWidgets.QFileDialog.getOpenFileName(self,"选取文件","C:/","Image files(*.jpg *.png *.jpeg *.gif)")  # 起始路径
        self.lineEdit.setText(m[0])
    # @pyqtSlot()
    def drawExcel(self):
        """
        画excel
        """
        if(self.lineEdit.text()!=''):
            self.label.setText('正在绘制中...')
            self.label.repaint()
            print(self.lineEdit.text())
            res=utils.drawPictures(self.lineEdit.text())
            if res ==-1:
                self.label.setText('绘制失败!')
                msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '提示', '文件读取失败!\n(不存在/格式不支持)\n')
                msg_box.exec_()
                self.label.setText('欢迎使用excelPainter')
            elif res ==1:
                self.label.setText('绘制成功!')
                msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Information, '提示', '绘制成功!\n')
                msg_box.exec_()
                self.label.setText('欢迎使用excelPainter')
        else:
            self.label.setText('欢迎使用excelPainter')
            msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '提示', '请选择文件!\n')
            msg_box.exec_()
            


if __name__ == '__main__':
        app=QApplication(sys.argv)
        ex=MainWindow()
        ex.show()
        sys.exit(app.exec_())
